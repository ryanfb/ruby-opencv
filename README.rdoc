= ** THIS GEM/REPO IS NO LONGER MAINTAINED **

The last release of the `opencv` gem was on July 25th, 2009: https://rubygems.org/gems/opencv/versions/0.0.7

Please use an alternative OpenCV wrapper.

= OpenCV

The initial Open Computer Vision library was originally developed by Intel 
Corporation. Recent development has been headed by Willow Garage, Inc.

OpenCV Sourceforge Project
http://opencv.willowgarage.com/wiki/

Sourceforge
http://sourceforge.net/projects/opencvlibrary/

Ruby/OpenCV Author's Web Page
http://blueruby.mydns.jp/opencv

== DESCRIPTION:

OpenCV Ruby Wrapper

== FEATURES/PROBLEMS:

* First release rubygems, Some OpenCV functions wrapped.
* Ruby 1.8.7, 1.9.2 and OpenCV 2.2 are supported.
* Mouse interaction often causes segfaults on my Ubuntu 10.10 (Ruby 1.9.2).

== DEPENDENCIES:

This library relies on the OpenCV project. The following page shows how to install it:

http://opencv.willowgarage.com/wiki/InstallGuide

== INSTALLATION:

You can install by cloning this repository:

  git clone git://github.com/ser1zw/ruby-opencv.git
  
Then inside the ruby-opencv folder run:

  rake install_gem

You can also add ruby-opencv in your Gemfile:

  echo -e "\n"'gem "opencv", :git => "https://github.com/pcting/ruby-opencv"' >> Gemfile
  bundle install # or bundle update

== SYNOPSIS:

Once installed it is possible to show images via GUI Window.

  require "opencv"

  image = OpenCV::IplImage.load("sample.jpg")
  window = OpenCV::GUI::Window.new("preview")
  window.show(image)
  OpenCV::GUI::wait_key

For more samples, see examples/*.rb

== FACE DETECTION:

Here is a sample face detection program that doesn't rely on the GUI components.
In order for this to work you must copy the OpenCV haarcascades data into a 
subfolder called data.

  #!/usr/bin/env ruby
  require "opencv"

  if ARGV.length < 2
    puts "Usage: your_app_name source dest"
    exit
  end
 
  data = "./data/haarcascades/haarcascade_frontalface_alt.xml"
  detector = OpenCV::CvHaarClassifierCascade::load(data)
  image = OpenCV::IplImage.load(ARGV[0])
  detector.detect_objects(image) do |region|
    color = OpenCV::CvColor::Blue
    image.rectangle! region.top_left, region.bottom_right, :color => color
  end
  image.save_image(ARGV[1])

== REQUIREMENTS:

* OpenCV 2.2 or later
  http://opencv.willowgarage.com/wiki/
* ffcall (optional)
  http://www.haible.de/bruno/packages-ffcall.html

== LICENSE:

The BSD Liscense

see LICENSE.txt
